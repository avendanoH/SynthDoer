[{"/home/eddie/Projects/Sideprojects/react/dailytodo/src/index.js":"1","/home/eddie/Projects/Sideprojects/react/dailytodo/src/App.js":"2","/home/eddie/Projects/Sideprojects/react/dailytodo/src/TodoForm.js":"3","/home/eddie/Projects/Sideprojects/react/dailytodo/src/Todo.js":"4","/home/eddie/Projects/Sideprojects/react/dailytodo/src/TodoList.js":"5"},{"size":196,"mtime":1609624742381,"results":"6","hashOfConfig":"7"},{"size":2045,"mtime":1609718380653,"results":"8","hashOfConfig":"7"},{"size":1856,"mtime":1609304550446,"results":"9","hashOfConfig":"7"},{"size":1744,"mtime":1609718380653,"results":"10","hashOfConfig":"7"},{"size":417,"mtime":1609304550446,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"q6eq6j",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/eddie/Projects/Sideprojects/react/dailytodo/src/index.js",[],["24","25"],"/home/eddie/Projects/Sideprojects/react/dailytodo/src/App.js",["26"],"/home/eddie/Projects/Sideprojects/react/dailytodo/src/TodoForm.js",[],"/home/eddie/Projects/Sideprojects/react/dailytodo/src/Todo.js",["27","28"],"import React from 'react'\nimport styled from 'styled-components'\n\n// create synthwave button, complete, line-through using the synthw\n\n\nconst Button = styled.button`\n  background: #ff34b3;\n  background-image: -webkit-linear-gradient(top, #ff34b3, #2980b9);\n  background-image: -moz-linear-gradient(top, #ff34b3, #2980b9);\n  background-image: -ms-linear-gradient(top, #ff34b3, #2980b9);\n  background-image: -o-linear-gradient(top, #ff34b3, #2980b9);\n  background-image: linear-gradient(to bottom, #ff34b3, #2980b9);\n  -webkit-border-radius: 28;\n  -moz-border-radius: 28;\n  border-radius: 28px;\n  font-family: Courier New;\n  color: #ffffff;\n  font-size: 12px;\n  padding: 5px 10px 5px 10px;\n  text-decoration: none;\n\n  &:hover {\n    background: #3cb0fd;\n    background-image: -webkit-linear-gradient(top, #3cb0fd, #ff34b3);\n    background-image: -moz-linear-gradient(top, #3cb0fd, #ff34b3);\n    background-image: -ms-linear-gradient(top, #3cb0fd, #ff34b3);\n    background-image: -o-linear-gradient(top, #3cb0fd, #ff34b3);\n    background-image: linear-gradient(to bottom, #3cb0fd, #ff34b3);\n    text-decoration: none;\n}`;\n\n\nexport default function Todo({ todo, removeTodo, toggleIsComplete }) {\n    function handleRemClick() { removeTodo(todo.id) }\n\n    function handleCompleteToggle() { toggleIsComplete(todo.id) }\n\n    return (\n        <div style={{ display: \"flex\" }}>\n            <input type=\"checkbox\" onClick={handleCompleteToggle} />\n            <li\n                style={{\n\n                    textDecoration: todo.isComplete ? \"line-through\" : null\n                    \n                }}\n\n            >\n                {todo.title}\n\n            </li>\n            <Button onClick={handleRemClick}>Done it</Button>\n        </div>\n    );\n}\n","/home/eddie/Projects/Sideprojects/react/dailytodo/src/TodoList.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":5,"column":8,"nodeType":"35","messageId":"36","endLine":5,"endColumn":14},{"ruleId":"33","severity":1,"message":"37","line":4,"column":10,"nodeType":"35","messageId":"36","endLine":4,"endColumn":20},{"ruleId":"33","severity":1,"message":"38","line":5,"column":10,"nodeType":"35","messageId":"36","endLine":5,"endColumn":15},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'withStyles' is defined but never used.","'green' is defined but never used.","no-global-assign","no-unsafe-negation"]