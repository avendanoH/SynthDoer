[{"/home/eddie/Projects/Sideprojects/react/dailytodo/src/index.js":"1","/home/eddie/Projects/Sideprojects/react/dailytodo/src/App.js":"2","/home/eddie/Projects/Sideprojects/react/dailytodo/src/TodoForm.js":"3","/home/eddie/Projects/Sideprojects/react/dailytodo/src/Todo.js":"4","/home/eddie/Projects/Sideprojects/react/dailytodo/src/TodoList.js":"5"},{"size":196,"mtime":1609282928661,"results":"6","hashOfConfig":"7"},{"size":1963,"mtime":1609291384979,"results":"8","hashOfConfig":"7"},{"size":1856,"mtime":1609290151504,"results":"9","hashOfConfig":"7"},{"size":1744,"mtime":1609289162819,"results":"10","hashOfConfig":"7"},{"size":417,"mtime":1609289825311,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"q6eq6j",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/eddie/Projects/Sideprojects/react/dailytodo/src/index.js",[],["24","25"],"/home/eddie/Projects/Sideprojects/react/dailytodo/src/App.js",["26","27"],"import React, { useState, useEffect } from 'react'\nimport TodoForm from \"./TodoForm\"\nimport TodoList from './TodoList'\nimport \"./App.css\";\nimport styled from 'styled-components'\nimport synthBackground from \"./synth-skyline.mp4\"  \nimport Resonance from \"./Resonance.mp3\"\nimport ReactAudioPlayer from 'react-audio-player'\n\n\n\n\nfunction App() {\n  const resonance = new Audio(Resonance)\n  const playResonance = () =>{resonance.play()}\n  const curr = new Date()\n  const date = `${curr.getDate()}/${curr.getMonth()+1}/${curr.getFullYear()}`;\n  const [todo, setTodo] = useState([]);\n\n  useEffect(() => {\n    const storedTodo = JSON.parse(localStorage.getItem('todo'));\n    if (storedTodo) { setTodo(storedTodo) }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('todo', JSON.stringify(todo));\n  }, [todo]);\n\n  function insertTodo(t) {\n    setTodo([t, ...todo]);\n  }\n\n  function removeTodo(id) { setTodo(todo.filter(t => t.id !== id)) }\n\n  function toggleIsComplete(id) {\n    setTodo(\n      todo.map(t => {\n        if (t.id === id) {\n          return {\n            ...t,\n            isComplete: !t.isComplete\n          };\n        }\n        return t\n      })\n    );\n  }\n\n\n  return (\n    \n    \n    <div className=\"App\">\n      <ReactAudioPlayer src={Resonance} autoPlay loop controls />\n      <header className=\"App-header\">\n      <video\n      style={{\n        position: 'absolute',\n        width: '100%',\n        left: '50%',\n        top: '50%',\n        height:'100%',\n        objectFit: 'cover',\n        transform: 'translate(-50%,-50%)',\n        zIndex: '-2'\n      }}\n        autoPlay\n        loop\n        muted>\n        <source src = {synthBackground} type=\"video/mp4\"/>\n      </video>\n        <p>{date}</p>\n        <p>Your Todo List</p>\n        <TodoForm insertTodo={insertTodo} />\n        <TodoList\n          todo={todo}\n          removeTodo={removeTodo}\n          toggleIsComplete={toggleIsComplete} />\n      </header>\n    </div>\n    \n  );\n}\nexport default App;\n","/home/eddie/Projects/Sideprojects/react/dailytodo/src/TodoForm.js",[],"/home/eddie/Projects/Sideprojects/react/dailytodo/src/Todo.js",[],"/home/eddie/Projects/Sideprojects/react/dailytodo/src/TodoList.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":5,"column":8,"nodeType":"34","messageId":"35","endLine":5,"endColumn":14},{"ruleId":"32","severity":1,"message":"36","line":15,"column":9,"nodeType":"34","messageId":"35","endLine":15,"endColumn":22},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'playResonance' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]